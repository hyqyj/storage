#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/mman.h>

#define BUFFER_SIZE 4096

int main(int argc, char **argv) {
    int fd;
    void *map_addr;
    off_t file_size, offset;
    char buffer[BUFFER_SIZE];

    // 打开进程内存映射文件
    fd = open("/proc/1234/mem", O_RDONLY); // 1234为进程ID

    if (fd == -1) {
        perror("open");
        return 1;
    }

    // 获取进程内存映射文件的大小
    file_size = lseek(fd, 0, SEEK_END);

    // 映射进程内存映射文件到内存中
    map_addr = mmap(NULL, file_size, PROT_READ, MAP_PRIVATE, fd, 0);

    if (map_addr == MAP_FAILED) {
        perror("mmap");
        return 1;
    }

    // 读取进程内存中的数据
    offset = 0;

    while (offset < file_size) {
        ssize_t read_size = read(fd, buffer, BUFFER_SIZE);

        if (read_size == -1) {
            perror("read");
            break;
        }

        offset += read_size;

        // 处理读取的数据
        // ...

        if (read_size < BUFFER_SIZE) {
            break;
        }
    }

    // 解除内存映射
    munmap(map_addr, file_size);

    // 关闭进程内存映射文件
    close(fd);

    return 0;
}
